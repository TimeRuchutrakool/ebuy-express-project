// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

////////////////////// User //////////////////////
model User {
  id           Int          @id @default(autoincrement())
  firstName    String       @map("first_name")
  lastName     String       @map("last_name")
  email        String       @unique
  password     String
  point        Int          @default(0)
  address      String
  profileImage String?      @map("profile_image")
  products     Product[]
  review       Review[]
  cartItem     CartItem[]
  wishItem     WishItem[]
  orderSeller  Order[]      @relation("seller")
  orderBuyer   Order[]      @relation("buyer")
  bidSeller    BidProduct[] @relation("seller")
  bidBuyer     BidProduct[] @relation("buyer")
  chatBuyer    Chatroom[]   @relation("buyer")
  chatSeller   Chatroom[]   @relation("seller")
  Message      Message[]

  @@map("users")
}

////////////////////// Product //////////////////////
model Product {
  id             Int              @id @default(autoincrement())
  name           String
  price          Decimal          @db.Decimal(10, 2)
  description    String           @db.LongText
  createdAt      DateTime         @default(now()) @map("create_at")
  avgRating      Decimal          @db.Decimal(2, 1)
  sellerId       Int              @map("seller_id")
  users          User             @relation(fields: [sellerId], references: [id])
  typeId         Int              @map("type_id")
  types          Type             @relation(fields: [typeId], references: [id])
  brandId        Int              @map("brand_id")
  brands         Brand            @relation(fields: [brandId], references: [id])
  category       Category         @relation(fields: [categoryId], references: [id])
  categoryId     Int              @map("category_id")
  ProductVariant ProductVariant[]
  Review         Review[]
  CartItem       CartItem[]
  wishItem       WishItem[]
  OrderItem      OrderItem[]
  ProductImage   ProductImage[]

  @@map("products")
}

model ProductImage {
  id           Int         @id @default(autoincrement())
  imageUrl     String
  productId    Int?        @map("product_id")
  product      Product?    @relation(fields: [productId], references: [id])
  bidProductId Int?        @map("bid_product_id")
  bidProduct   BidProduct? @relation(fields: [bidProductId], references: [id])

  @@map("product_images")
}

model Type {
  id       Int       @id @default(autoincrement())
  name     String
  products Product[]

  @@map("types")
}

model Brand {
  id      Int       @id @default(autoincrement())
  name    String
  Product Product[]

  @@map("brands")
}

model Category {
  id      Int       @id @default(autoincrement())
  name    String
  color   Boolean
  shoes   Boolean
  shirt   Boolean
  pants   Boolean
  Product Product[]

  @@map("categories")
}

model ProductVariant {
  id          Int        @id @default(autoincrement())
  stock       Int
  productId   Int        @map("product_id")
  product     Product    @relation(fields: [productId], references: [id])
  colorId     Int?       @map("color_id")
  color       Color?     @relation(fields: [colorId], references: [id])
  shoeSizeId  Int?       @map("shoe_size_id")
  shoeSize    ShoeSize?  @relation(fields: [shoeSizeId], references: [id])
  shirtSizeId Int?
  shirtSize   ShirtSize? @relation(fields: [shirtSizeId], references: [id])
  pantsSizeId Int?
  pantsSize   PantsSize? @relation(fields: [pantsSizeId], references: [id])

  @@map("product_variants")
}

model Color {
  id             Int              @id @default(autoincrement())
  name           String
  ProductVariant ProductVariant[]

  @@map("colors")
}

model ShoeSize {
  id             Int              @id @default(autoincrement())
  name           String
  ProductVariant ProductVariant[]

  @@map("shoe_sizes")
}

model ShirtSize {
  id             Int              @id @default(autoincrement())
  name           String
  ProductVariant ProductVariant[]

  @@map("shirt_sizes")
}

model PantsSize {
  id             Int              @id @default(autoincrement())
  name           String
  ProductVariant ProductVariant[]

  @@map("pants_sizes")
}

////////////////////// Review //////////////////////
model Review {
  id        Int     @id @default(autoincrement())
  content   String
  rating    Int
  productId Int     @map("product_id")
  product   Product @relation(fields: [productId], references: [id])
  buyerId   Int     @map("buyer_id")
  user      User    @relation(fields: [buyerId], references: [id])

  @@map("reviews")
}

model CartItem {
  id        Int     @id @default(autoincrement())
  amount    Int
  buyerId   Int     @map("buyer_id")
  user      User    @relation(fields: [buyerId], references: [id])
  productId Int     @map("product_id")
  product   Product @relation(fields: [productId], references: [id])

  @@map("cart_items")
}

model WishItem {
  id        Int     @id @default(autoincrement())
  buyerId   Int     @map("buyer_id")
  user      User    @relation(fields: [buyerId], references: [id])
  productId Int     @map("product_id")
  product   Product @relation(fields: [productId], references: [id])

  @@map("wish_items")
}

////////////////////// Order //////////////////////
model Order {
  id        Int         @id @default(autoincrement())
  createAt  DateTime    @default(now()) @map("create_at")
  buyerId   Int         @map("buyer_id")
  buyer     User        @relation("buyer", fields: [buyerId], references: [id])
  sellerId  Int         @map("seller_id")
  seller    User        @relation("seller", fields: [sellerId], references: [id])
  OrderItem OrderItem[]

  @@map("orders")
}

model OrderItem {
  id             Int         @id @default(autoincrement())
  amount         Int
  trackNum       String?     @map("track_number")
  logisticsName  String?     @map("logistics_name")
  transactionNum Int         @map("transaction_number")
  paymentMethod  String      @map("payment_method")
  orderId        Int         @map("order_id")
  order          Order       @relation(fields: [orderId], references: [id])
  bidProductId   Int?        @map("bid_product_id")
  bidId          BidProduct? @relation(fields: [bidProductId], references: [id])
  productId      Int?        @map("product_id")
  product        Product?    @relation(fields: [productId], references: [id])
}

////////////////////// Bid Product //////////////////////
model BidProduct {
  id           Int            @id @default(autoincrement())
  name         String
  description  String
  initialPrice Decimal        @db.Decimal(10, 2)
  startAt      DateTime       @map("start_at")
  endAt        DateTime       @map("end_at")
  createAt     DateTime       @default(now()) @map("created_at")
  updateAt     DateTime?      @map("updated_at")
  bidPrice     Decimal?       @db.Decimal(10, 2)
  buyer        User?          @relation("buyer", fields: [buyerId], references: [id])
  buyerId      Int?           @map("buyer_id")
  sellerId     Int            @map("seller_id")
  seller       User           @relation("seller", fields: [sellerId], references: [id])
  OrderItem    OrderItem[]
  ProductImage ProductImage[]

  @@map("bid_products")
}

////////////////////// Chat Message //////////////////////
model Chatroom {
  id       Int       @id @default(autoincrement())
  buyerId  Int       @map("buyer_id")
  buyer    User      @relation("buyer", fields: [buyerId], references: [id])
  sellerId Int       @map("seller_id")
  seller   User      @relation("seller", fields: [sellerId], references: [id])
  Message  Message[]

  @@map("chatrooms")
}

model Message {
  id         Int      @id @default(autoincrement())
  content    String
  sendAt     DateTime @default(now()) @map("send_at")
  chatroom   Chatroom @relation(fields: [chatroomId], references: [id])
  chatroomId Int      @map("chatroom_id")
  senderId   Int      @map("sender_id")
  user       User     @relation(fields: [senderId], references: [id])

  @@map("messages")
}
